{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kamil\\\\Desktop\\\\front-end\\\\learning\\\\react\\\\nextjs-practice\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetup.image,\n    title: props.meetup.image,\n    address: props.meetup.image,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://user3:H3hGY74PeBhDQelA@cluster0.mpcsjjk.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  // fetch data\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://user3:H3hGY74PeBhDQelA@cluster0.mpcsjjk.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/kamil/Desktop/front-end/learning/react/nextjs-practice/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","meetup","image","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAChC,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,KADrB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,MAAN,CAAaC,KAFrB;AAGC,IAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaC,KAHvB;AAIC,IAAA,WAAW,EAAEF,KAAK,CAACC,MAAN,CAAaE;AAJ3B;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACpB,gGADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEGR,EAAAA,MAAM,CAACS,KAAP;AAEH,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYhB,MAAM,KAAK;AAC7BiB,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAElB,MAAM,CAACW,GAAP,CAAWQ,QAAX;AADH;AADqB,KAAL,CAAlB;AAFD,GAAP;AAQA,CArBM;AAuBP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAC9C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEG,QAAMd,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACvB,gGADuB,CAArB;AAIH,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAACZ,IAAAA,GAAG,EAAEO;AAAN,GAA1B,CAA7B;AAEGd,EAAAA,MAAM,CAACS,KAAP;AAEH,SAAO;AACNd,IAAAA,KAAK,EAAE;AACNyB,MAAAA,UAAU,EAAEF;AADN;AADD,GAAP;AAKA,CAtBM;AAwBP,eAAexB,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetup.image}\r\n\t\t\ttitle={props.meetup.image}\r\n\t\t\taddress={props.meetup.image}\r\n\t\t\tdescription={props.meetup.description}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://user3:H3hGY74PeBhDQelA@cluster0.mpcsjjk.mongodb.net/?retryWrites=true&w=majority'\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close()\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({\r\n\t\t\tparams: {\r\n\t\t\t\tmeetupId: meetup._id.toString(),\r\n\t\t\t},\r\n\t\t})),\r\n\t};\r\n};\r\n\r\nexport const getStaticProps = async context => {\r\n\t// fetch data\r\n\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\r\n\t\t'mongodb+srv://user3:H3hGY74PeBhDQelA@cluster0.mpcsjjk.mongodb.net/?retryWrites=true&w=majority'\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({_id: meetupId})\r\n\r\n    client.close()\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}