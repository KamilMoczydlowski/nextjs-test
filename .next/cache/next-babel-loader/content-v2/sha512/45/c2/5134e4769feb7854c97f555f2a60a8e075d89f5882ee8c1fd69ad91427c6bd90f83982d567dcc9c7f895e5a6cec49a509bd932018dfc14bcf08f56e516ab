{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kamil\\\\Desktop\\\\front-end\\\\learning\\\\react\\\\nextjs-practice\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst HomePage = props => {\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 2\n  }, this);\n}; // export const getServerSideProps = async (context) => {\n//     const req = context.req\n//     const res = context.res\n// \t// fetch data\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY__MEETUPS,\n// \t\t},\n// \t};\n// };\n\n\nexport const getStaticProps = async () => {\n  // fetch data\n  const client = await MongoClient.connect('mongodb+srv://user3:H3hGY74PeBhDQelA@cluster0.mpcsjjk.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/kamil/Desktop/front-end/learning/react/nextjs-practice/pages/index.js"],"names":["Head","Fragment","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACzB;;AACA;AAAA,UAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACpB,gGADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC/BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADiB;AAE/BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFe;AAG/BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHiB;AAI/BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ2B,OAAL,CAAlB;AADH,KADD;AASNC,IAAAA,UAAU,EAAE;AATN,GAAP;AAWA,CAzBM;AA2BP,eAAepB,QAAf","sourcesContent":["import Head from 'next/head';\r\n\r\nimport { Fragment } from 'react';\r\n\r\nimport { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n\r\nconst HomePage = props => {\r\n\treturn;\r\n\t<Fragment>\r\n\t\t<Head></Head>\r\n\t\t<MeetupList meetups={props.meetups} />\r\n\t</Fragment>;\r\n};\r\n\r\n// export const getServerSideProps = async (context) => {\r\n//     const req = context.req\r\n//     const res = context.res\r\n// \t// fetch data\r\n// \treturn {\r\n// \t\tprops: {\r\n// \t\t\tmeetups: DUMMY__MEETUPS,\r\n// \t\t},\r\n// \t};\r\n// };\r\n\r\nexport const getStaticProps = async () => {\r\n\t// fetch data\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://user3:H3hGY74PeBhDQelA@cluster0.mpcsjjk.mongodb.net/?retryWrites=true&w=majority'\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find().toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: meetups.map(meetup => ({\r\n\t\t\t\ttitle: meetup.title,\r\n\t\t\t\taddress: meetup.address,\r\n\t\t\t\timage: meetup.image,\r\n\t\t\t\tid: meetup._id.toString(),\r\n\t\t\t})),\r\n\t\t},\r\n\t\trevalidate: 1,\r\n\t};\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}